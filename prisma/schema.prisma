// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UploadFileUser {
  id     Int     @id @default(autoincrement())
  url    String?
  User   User?   @relation(fields: [userId], references: [id])
  userId Int?
}

model User {
  id             Int                @id @default(autoincrement())
  email          String             @unique
  phoneNumber    String?
  lastName       String?
  firstName      String?
  birthDate      DateTime?          @db.Date
  password       String
  avatar         String?
  lastLesson     Lesson?            @relation(fields: [lessonId], references: [id])
  rank           Rank?              @relation(fields: [rankId], references: [id])
  bio            String?
  uploadFileUser UploadFileUser[]
  school         School?            @relation(fields: [schoolId], references: [id])
  schoolId       Int?
  subscription   Subscription[]
  styleId        Int?
  lessonId       Int?
  rankId         Int?
  dateCreation   DateTime           @db.Date
  Instruments    InstrumentOnUser[]
  Courses        CourseOnUser[]
  Styles         StyleOnUser[]
  Badges         BadgeOnUser[]
  Timestamp      Timestamp[]
}

model InstrumentOnUser {
  instrument   Instrument @relation(fields: [instrumentId], references: [id])
  instrumentId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int

  @@id([userId, instrumentId])
}

model CourseOnUser {
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int

  @@id([userId, courseId])
}

model StyleOnUser {
  style   Style @relation(fields: [styleId], references: [id])
  styleId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int

  @@id([userId, styleId])
}

model BadgeOnUser {
  badge   Style @relation(fields: [badgeId], references: [id])
  badgeId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int

  @@id([userId, badgeId])
}

model InstrumentOnTeacher {
  instrument   Instrument @relation(fields: [instrumentId], references: [id])
  instrumentId Int
  teacher      Teacher    @relation(fields: [teacherId], references: [id])
  teacherId    Int

  @@id([teacherId, instrumentId])
}

model StyleOnTeacher {
  style     Style   @relation(fields: [styleId], references: [id])
  styleId   Int
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int

  @@id([teacherId, styleId])
}

model CourseOnTeacher {
  course    Course  @relation(fields: [courseId], references: [id])
  courseId  Int
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int

  @@id([teacherId, courseId])
}

model Teacher {
  id              Int                   @id @default(autoincrement())
  email           String                @unique
  lastName        String?
  firstName       String?
  description     String?
  school          String?
  dateOfBirth     DateTime
  titleWin        String?
  diploma         String?
  photo           String[]
  career          String?
  Instruments     InstrumentOnTeacher[]
  Styles          StyleOnTeacher[]
  Lesson          Lesson[]
  CourseOnTeacher CourseOnTeacher[]
}

model School {
  id   Int     @id @default(autoincrement())
  nom  String?
  user User[]
  rank Rank[]
}

model Style {
  id             Int              @id @default(autoincrement())
  name           String?
  description    String?
  rank           Rank[]
  course         Course[]
  competition    Competition[]
  StyleOnUser    StyleOnUser[]
  BadgeOnUser    BadgeOnUser[]
  StyleOnTeacher StyleOnTeacher[]
}

model Rank {
  id      Int    @id @default(autoincrement())
  place   Int
  style   Style  @relation(fields: [styleId], references: [id])
  ecole   School @relation(fields: [ecoleId], references: [id])
  point   Int
  styleId Int
  ecoleId Int
  user    User[]
}

model Level {
  id          Int           @id @default(autoincrement())
  lesson      Lesson        @relation(fields: [lessonId], references: [id])
  nom         String?
  lessonId    Int
  cours       Course[]
  badge       Badge[]
  competition Competition[]
}

model LessonFile {
  id       Int      @id @default(autoincrement())
  file     String[]
  lesson   Lesson   @relation(fields: [lessonId], references: [id])
  lessonId Int
}

model Video {
  id          Int     @id @default(autoincrement())
  nom         String?
  description String?
  lesson      Lesson  @relation(fields: [lessonId], references: [id])
  lessonId    Int
}

model Lesson {
  id          Int          @id @default(autoincrement())
  nom         String?
  description String?
  niveau      Level[]
  imageUrl    String
  teacher     Teacher      @relation(fields: [teacherId], references: [id])
  lessonFile  LessonFile[]
  video       Video[]
  course      Course?      @relation(fields: [courseId], references: [id])
  courseId    Int?
  badge       Badge[]
  user        User[]
  teacherId   Int
  Timestamp   Timestamp[]
}

model Course {
  id              Int               @id @default(autoincrement())
  name            String?
  description     String?
  imageUrl        String
  level           Level             @relation(fields: [levelId], references: [id])
  style           Style             @relation(fields: [styleId], references: [id])
  instrument      Instrument        @relation(fields: [instrumentId], references: [id])
  lesson          Lesson[]
  levelId         Int
  styleId         Int
  instrumentId    Int
  badge           Badge[]
  CourseOnUser    CourseOnUser[]
  CourseOnTeacher CourseOnTeacher[]
}

model Instrument {
  id                  Int                   @id @default(autoincrement())
  name                String?
  description         String?
  course              Course[]
  competition         Competition[]
  InstrumentOnUser    InstrumentOnUser[]
  InstrumentOnTeacher InstrumentOnTeacher[]
}

model Badge {
  id        Int         @id @default(autoincrement())
  name      String?
  level     Level       @relation(fields: [levelId], references: [id])
  lesson    Lesson      @relation(fields: [lessonId], references: [id])
  course    Course      @relation(fields: [courseId], references: [id])
  point     Int
  certifie  Boolean
  levelId   Int
  lessonId  Int
  courseId  Int
  iconBadge IconBadge[]
}

model IconBadge {
  id      Int    @id @default(autoincrement())
  url     String
  badge   Badge  @relation(fields: [badgeId], references: [id])
  badgeId Int
}

model Subscription {
  id                 Int              @id @default(autoincrement())
  user               User             @relation(fields: [userId], references: [id])
  expiration         DateTime
  subscriptionPlan   SubscriptionPlan @relation(fields: [subscriptionPlanId], references: [id])
  userId             Int
  subscriptionPlanId Int
}

model SubscriptionPlan {
  id           Int            @id @default(autoincrement())
  name         String?
  plan         String
  price        Float
  duration     DateTime
  subscription Subscription[]
}

model Competition {
  id           Int        @id @default(autoincrement())
  name         String?
  description  String?
  level        Level      @relation(fields: [levelId], references: [id])
  style        Style      @relation(fields: [styleId], references: [id])
  instrument   Instrument @relation(fields: [instrumentId], references: [id])
  date         DateTime
  localisation String
  priceEnter   Int
  priceWin     Int
  levelId      Int
  styleId      Int
  instrumentId Int
}

model Timestamp {
  id        Int    @id @default(autoincrement())
  timestamp String
  status    String
  lesson    Lesson @relation(fields: [lessonId], references: [id])
  lessonId  Int
  user      User   @relation(fields: [userId], references: [id])
  userId    Int

  @@unique([lessonId, userId], name: "userLessonIdentifier")
}
